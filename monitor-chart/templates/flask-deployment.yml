apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
  labels:
    run: flask
spec:
  replicas: { { .Values.flask.deployment.replicas } }
  selector:
    matchLabels:
      run: flask
  template:
    metadata:
      name: flask
      labels:
        run: flask
    spec:
      containers:
        - name: flask
          image: { { .Values.flask.deployment.image } }
          ports:
            - containerPort: { { .Values.flask.service.port } }
          env:
            - name: DB_HOST
              value: { { .Values.mongo.service.url } }
            - name: DB_PORT
              value: { { .Values.mongo.service.targetPort | quote } }
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db
                  key: name
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: db
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: db
                  key: password
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: host
                  key: host
            - name: HOST_USER
              valueFrom:
                configMapKeyRef:
                  name: host
                  key: user
            - name: HOST_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: host
                  key: password
